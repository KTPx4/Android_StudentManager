    plugins {

    alias(libs.plugins.android.application)
    // Add the Google services Gradle plugin
    id 'com.google.gms.google-services'
}

android {
    namespace 'com.example.essay'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.essay"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildFeatures {
        viewBinding true
    }

}

dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    implementation libs.annotation
    implementation libs.lifecycle.livedata.ktx
    implementation libs.lifecycle.viewmodel.ktx
    implementation libs.firebase.firestore
    implementation libs.firebase.auth
    implementation libs.firebase.database
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    // Import the Firebase BoM
    implementation platform(libs.firebase.bom)
    implementation("com.google.android.gms:play-services-maps:19.0.0") // Example for Maps SDK
    implementation libs.glide
    annotationProcessor libs.compiler
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    // TODO: Add the dependencies for Firebase products you want to use
    // When using the BoM, don't specify versions in Firebase dependencies
    implementation libs.firebase.analytics
    // Thêm phụ thuộc AndroidSVG
    implementation 'com.caverock:androidsvg:1.4'



    // Add the dependencies for any other desired Firebase products
    // https://firebase.google.com/docs/android/setup#available-libraries
}